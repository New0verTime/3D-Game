#include "StaticObject.h"
#include "Player.h"
#include"Ray_cast.h"
#include <string>
#include <iostream>
#include "Game.h"
#include<math.h>
void StaticObject::getInfo(){
    double ox=ThePlayer::Instance()->getPosx()/50,oy=ThePlayer::Instance()->getPosy()/50;
    dist=std::sqrt( (ox-x)*(ox-x) + (oy-y)*(oy-y) );
    double player_angle=ThePlayer::Instance()->getAngle()-30;
    if(player_angle<-180) player_angle+=360;
    double theta=std::atan((oy-y) / (ox-x)) *(180/3.14159265) ; // -90 to 90    std::atan(obj_Width/(3*dist)) *(180/3.14159265)
    if (ox>x) {
        theta+=180;
    }
    if(theta>180) theta-=360;
    delta_angle=theta-player_angle;
    if(delta_angle<0) delta_angle+=360;
    epsilon=std::min(std::atan(obj_Width/(3*dist)) *(180/3.14159265),60.0);
    if(1>0)  inside=true;
    else inside=false;
}
void StaticObject::RenderObject(){
    if(inside){
        std::cout<<obj_Width<<" "<<3*dist<<" "<<std::atan(obj_Width/(3*dist)) *(180/3.14159265)<<" "<<epsilon<<" "<<ThePlayer::Instance()->getPosx()/50<<" "<<ThePlayer::Instance()->getPosy()/50<<" "<<delta_angle<<"\n";
        double t=720*obj_Height/(dist);
        SDL_Rect Rect;
        Rect.w=3;
        Rect.h=t+t/obj_Height;
        Rect.y=360-t;
        for(double i=0;i<=epsilon;i+=0.1){
        if( (x-TheRay_cast::Instance()->get_rayinfo(int((delta_angle+i)*10)))*(x-ThePlayer::Instance()->getPosx()/50) <0  ){
        Rect.x=int((1280*(delta_angle+i))/60);
        SDL_RenderCopy(TheGame::Instance()->getRenderer(),TheTextureManager::Instance()->getTexture(id),NULL,&Rect);
        }
        }
    }
}
